
//! Autogenerated weights for pallet_rmrk_core
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-09, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `wrlx-tun311-33`, CPU: `AMD Ryzen 9 5900HX with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
    // ./target/release/rmrk-substrate
    // benchmark
    // pallet
    // --chain
    // dev
    // --execution=wasm
    // --wasm-execution=compiled
    // --pallet
    // pallet_rmrk_core
    // --extrinsic
    // *
    // --steps
    // 50
    // --repeat
    // 20
    // --output
    // pallets/rmrk-core/src/weights.rs
    // --template
    // ./benchmarking/frame-weight-template.hbs
    // --detailed-log-output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_rmrk_core.
pub trait WeightInfo {
    fn create_collection() -> Weight;
    fn mint_nft() -> Weight;
    fn mint_nft_directly_to_nft() -> Weight;
    fn destroy_collection() -> Weight;
    fn send_to_account() -> Weight;
    fn send_to_nft() -> Weight;
    fn burn_nft() -> Weight;
    fn accept_nft() -> Weight;
    fn reject_nft() -> Weight;
    fn change_collection_issuer() -> Weight;
    fn set_property() -> Weight;
    fn lock_collection() -> Weight;
    fn replace_resource() -> Weight;
    fn add_basic_resource() -> Weight;
    fn add_composable_resource() -> Weight;
    fn add_slot_resource() -> Weight;
    fn accept_resource() -> Weight;
    fn remove_resource() -> Weight;
    fn accept_resource_removal() -> Weight;
    fn set_priority() -> Weight;
}

/// Weights for pallet_rmrk_core using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
        impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:0 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:1)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn create_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `142`
        //  Estimated: `3643`
        // Minimum execution time: 48_531_000 picoseconds.
        Weight::from_parts(49_452_000, 3643)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
        }
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:1 w:0)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `499`
        //  Estimated: `3750`
        // Minimum execution time: 69_881_000 picoseconds.
        Weight::from_parts(72_235_000, 3750)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
        }
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:1 w:0)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint_nft_directly_to_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2537`
        //  Estimated: `52930`
        // Minimum execution time: 160_841_000 picoseconds.
        Weight::from_parts(162_644_000, 52930)
            .saturating_add(T::DbWeight::get().reads(24_u64))
            .saturating_add(T::DbWeight::get().writes(6_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:1)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
            /// Storage: Uniques ClassMetadataOf (r:0 w:1)
            /// Proof: Uniques ClassMetadataOf (max_values: None, max_size: Some(167), added: 2642, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:0 w:1)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
        fn destroy_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `568`
        //  Estimated: `3750`
        // Minimum execution time: 75_071_000 picoseconds.
        Weight::from_parts(77_986_000, 3750)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
        }
            /// Storage: Uniques Asset (r:20 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:0)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:2)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn send_to_account() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2624`
        //  Estimated: `52930`
        // Minimum execution time: 147_557_000 picoseconds.
        Weight::from_parts(149_099_000, 52930)
            .saturating_add(T::DbWeight::get().reads(23_u64))
            .saturating_add(T::DbWeight::get().writes(6_u64))
        }
            /// Storage: Uniques Asset (r:21 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:2 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:0)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:2)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:2)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn send_to_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2780`
        //  Estimated: `55527`
        // Minimum execution time: 159_789_000 picoseconds.
        Weight::from_parts(164_628_000, 55527)
            .saturating_add(T::DbWeight::get().reads(25_u64))
            .saturating_add(T::DbWeight::get().writes(7_u64))
        }
            /// Storage: Uniques Asset (r:20 w:20)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:20 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:20 w:20)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Properties (r:25 w:25)
            /// Proof: RmrkCore Properties (max_values: None, max_size: Some(348), added: 2823, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:39 w:19)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:20)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:20)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn burn_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5378`
        //  Estimated: `98763`
        // Minimum execution time: 1_855_033_000 picoseconds.
        Weight::from_parts(1_868_768_000, 98763)
            .saturating_add(T::DbWeight::get().reads(126_u64))
            .saturating_add(T::DbWeight::get().writes(126_u64))
        }
            /// Storage: Uniques Asset (r:2 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
        fn accept_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1403`
        //  Estimated: `6184`
        // Minimum execution time: 40_606_000 picoseconds.
        Weight::from_parts(40_977_000, 6184)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:2 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:1 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn reject_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2074`
        //  Estimated: `6184`
        // Minimum execution time: 131_927_000 picoseconds.
        Weight::from_parts(133_219_000, 6184)
            .saturating_add(T::DbWeight::get().reads(7_u64))
            .saturating_add(T::DbWeight::get().writes(7_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques OwnershipAcceptance (r:1 w:1)
            /// Proof: Uniques OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:2)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn change_collection_issuer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `776`
        //  Estimated: `3750`
        // Minimum execution time: 80_360_000 picoseconds.
        Weight::from_parts(84_669_000, 3750)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(6_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Properties (r:0 w:1)
            /// Proof: RmrkCore Properties (max_values: None, max_size: Some(348), added: 2823, mode: MaxEncodedLen)
        fn set_property() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `510`
        //  Estimated: `3750`
        // Minimum execution time: 35_065_000 picoseconds.
        Weight::from_parts(35_507_000, 3750)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
        fn lock_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `255`
        //  Estimated: `3750`
        // Minimum execution time: 22_282_000 picoseconds.
        Weight::from_parts(22_622_000, 3750)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn replace_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `322`
        //  Estimated: `3777`
        // Minimum execution time: 29_635_000 picoseconds.
        Weight::from_parts(30_186_000, 3777)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn add_basic_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 123_722_000 picoseconds.
        Weight::from_parts(125_064_000, 52930)
            .saturating_add(T::DbWeight::get().reads(23_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
            /// Storage: RmrkCore EquippableBases (r:0 w:1)
            /// Proof: RmrkCore EquippableBases (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
        fn add_composable_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 128_951_000 picoseconds.
        Weight::from_parts(130_364_000, 52930)
            .saturating_add(T::DbWeight::get().reads(23_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
            /// Storage: RmrkCore EquippableSlots (r:0 w:1)
            /// Proof: RmrkCore EquippableSlots (max_values: None, max_size: Some(100), added: 2575, mode: MaxEncodedLen)
        fn add_slot_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 133_009_000 picoseconds.
        Weight::from_parts(135_754_000, 52930)
            .saturating_add(T::DbWeight::get().reads(23_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn accept_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2044`
        //  Estimated: `52930`
        // Minimum execution time: 120_767_000 picoseconds.
        Weight::from_parts(122_119_000, 52930)
            .saturating_add(T::DbWeight::get().reads(22_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn remove_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2120`
        //  Estimated: `52930`
        // Minimum execution time: 122_880_000 picoseconds.
        Weight::from_parts(124_994_000, 52930)
            .saturating_add(T::DbWeight::get().reads(22_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn accept_resource_removal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2044`
        //  Estimated: `52930`
        // Minimum execution time: 122_770_000 picoseconds.
        Weight::from_parts(124_173_000, 52930)
            .saturating_add(T::DbWeight::get().reads(21_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Priorities (r:0 w:24)
            /// Proof: RmrkCore Priorities (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
        fn set_priority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1930`
        //  Estimated: `52930`
        // Minimum execution time: 223_879_000 picoseconds.
        Weight::from_parts(226_715_000, 52930)
            .saturating_add(T::DbWeight::get().reads(21_u64))
            .saturating_add(T::DbWeight::get().writes(24_u64))
        }
    }

    // For backwards compatibility and tests
    impl WeightInfo for () {
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:0 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:1)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn create_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `142`
        //  Estimated: `3643`
        // Minimum execution time: 48_531_000 picoseconds.
        Weight::from_parts(49_452_000, 3643)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
        }
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:1 w:0)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `499`
        //  Estimated: `3750`
        // Minimum execution time: 69_881_000 picoseconds.
        Weight::from_parts(72_235_000, 3750)
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
        }
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:1 w:0)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint_nft_directly_to_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2537`
        //  Estimated: `52930`
        // Minimum execution time: 160_841_000 picoseconds.
        Weight::from_parts(162_644_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(24_u64))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:1)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
            /// Storage: Uniques ClassMetadataOf (r:0 w:1)
            /// Proof: Uniques ClassMetadataOf (max_values: None, max_size: Some(167), added: 2642, mode: MaxEncodedLen)
            /// Storage: Uniques CollectionMaxSupply (r:0 w:1)
            /// Proof: Uniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
        fn destroy_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `568`
        //  Estimated: `3750`
        // Minimum execution time: 75_071_000 picoseconds.
        Weight::from_parts(77_986_000, 3750)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
        }
            /// Storage: Uniques Asset (r:20 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:0)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:2)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn send_to_account() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2624`
        //  Estimated: `52930`
        // Minimum execution time: 147_557_000 picoseconds.
        Weight::from_parts(149_099_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(23_u64))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
        }
            /// Storage: Uniques Asset (r:21 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:2 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:0)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:0 w:2)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:2)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn send_to_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2780`
        //  Estimated: `55527`
        // Minimum execution time: 159_789_000 picoseconds.
        Weight::from_parts(164_628_000, 55527)
            .saturating_add(RocksDbWeight::get().reads(25_u64))
            .saturating_add(RocksDbWeight::get().writes(7_u64))
        }
            /// Storage: Uniques Asset (r:20 w:20)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:20 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:20 w:20)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Properties (r:25 w:25)
            /// Proof: RmrkCore Properties (max_values: None, max_size: Some(348), added: 2823, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:39 w:19)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:20)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:20)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn burn_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5378`
        //  Estimated: `98763`
        // Minimum execution time: 1_855_033_000 picoseconds.
        Weight::from_parts(1_868_768_000, 98763)
            .saturating_add(RocksDbWeight::get().reads(126_u64))
            .saturating_add(RocksDbWeight::get().writes(126_u64))
        }
            /// Storage: Uniques Asset (r:2 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
        fn accept_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1403`
        //  Estimated: `6184`
        // Minimum execution time: 40_606_000 picoseconds.
        Weight::from_parts(40_977_000, 6184)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:2 w:1)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Nfts (r:1 w:1)
            /// Proof: RmrkCore Nfts (max_values: None, max_size: Some(235), added: 2710, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Children (r:1 w:1)
            /// Proof: RmrkCore Children (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: Uniques Account (r:0 w:1)
            /// Proof: Uniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Uniques ItemPriceOf (r:0 w:1)
            /// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn reject_nft() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2074`
        //  Estimated: `6184`
        // Minimum execution time: 131_927_000 picoseconds.
        Weight::from_parts(133_219_000, 6184)
            .saturating_add(RocksDbWeight::get().reads(7_u64))
            .saturating_add(RocksDbWeight::get().writes(7_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques OwnershipAcceptance (r:1 w:1)
            /// Proof: Uniques OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
            /// Storage: Uniques Class (r:1 w:1)
            /// Proof: Uniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Uniques ClassAccount (r:0 w:2)
            /// Proof: Uniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn change_collection_issuer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `776`
        //  Estimated: `3750`
        // Minimum execution time: 80_360_000 picoseconds.
        Weight::from_parts(84_669_000, 3750)
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:1 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Properties (r:0 w:1)
            /// Proof: RmrkCore Properties (max_values: None, max_size: Some(348), added: 2823, mode: MaxEncodedLen)
        fn set_property() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `510`
        //  Estimated: `3750`
        // Minimum execution time: 35_065_000 picoseconds.
        Weight::from_parts(35_507_000, 3750)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:1)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
        fn lock_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `255`
        //  Estimated: `3750`
        // Minimum execution time: 22_282_000 picoseconds.
        Weight::from_parts(22_622_000, 3750)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn replace_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `322`
        //  Estimated: `3777`
        // Minimum execution time: 29_635_000 picoseconds.
        Weight::from_parts(30_186_000, 3777)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn add_basic_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 123_722_000 picoseconds.
        Weight::from_parts(125_064_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(23_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
            /// Storage: RmrkCore EquippableBases (r:0 w:1)
            /// Proof: RmrkCore EquippableBases (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
        fn add_composable_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 128_951_000 picoseconds.
        Weight::from_parts(130_364_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(23_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
            /// Storage: RmrkCore EquippableSlots (r:0 w:1)
            /// Proof: RmrkCore EquippableSlots (max_values: None, max_size: Some(100), added: 2575, mode: MaxEncodedLen)
        fn add_slot_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2359`
        //  Estimated: `52930`
        // Minimum execution time: 133_009_000 picoseconds.
        Weight::from_parts(135_754_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(23_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn accept_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2044`
        //  Estimated: `52930`
        // Minimum execution time: 120_767_000 picoseconds.
        Weight::from_parts(122_119_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(22_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: RmrkCore Collections (r:1 w:0)
            /// Proof: RmrkCore Collections (max_values: None, max_size: Some(285), added: 2760, mode: MaxEncodedLen)
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn remove_resource() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2120`
        //  Estimated: `52930`
        // Minimum execution time: 122_880_000 picoseconds.
        Weight::from_parts(124_994_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(22_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Resources (r:1 w:1)
            /// Proof: RmrkCore Resources (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
        fn accept_resource_removal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `2044`
        //  Estimated: `52930`
        // Minimum execution time: 122_770_000 picoseconds.
        Weight::from_parts(124_173_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(21_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Uniques Asset (r:20 w:0)
            /// Proof: Uniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
            /// Storage: RmrkCore Lock (r:1 w:0)
            /// Proof: RmrkCore Lock (max_values: None, max_size: Some(17), added: 2492, mode: MaxEncodedLen)
            /// Storage: RmrkCore Priorities (r:0 w:24)
            /// Proof: RmrkCore Priorities (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
        fn set_priority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1930`
        //  Estimated: `52930`
        // Minimum execution time: 223_879_000 picoseconds.
        Weight::from_parts(226_715_000, 52930)
            .saturating_add(RocksDbWeight::get().reads(21_u64))
            .saturating_add(RocksDbWeight::get().writes(24_u64))
        }
    }